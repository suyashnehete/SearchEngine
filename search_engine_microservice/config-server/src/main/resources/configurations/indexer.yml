eureka:
    instance:
        hostname: localhost
    client:
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/

server:
    port: 8091
    servlet:
        context-path: /api/v1

spring:
    application:
        name: indexer
    servlet:
        multipart:
            max-file-size: 50MB
    datasource:
        url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:search_engine}
        username: ${DB_USERNAME:admin}
        password: ${DB_PASSWORD:admin}
        driver-class-name: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: update
        show-sql: false
        properties:
            hibernate:
                format_sql: true
        database: postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
    kafka:
        bootstrap-servers: localhost:9092
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        consumer:
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    max-size: ${KAFKA_MAX_MESSAGE_SIZE:10485760}  # 10MB default
    producer:
        batch-size: ${KAFKA_PRODUCER_BATCH_SIZE:16384}
        linger-ms: ${KAFKA_PRODUCER_LINGER_MS:5}
        compression-type: ${KAFKA_PRODUCER_COMPRESSION:snappy}
    consumer:
        group-id: indexer-service-group
        max-poll-records: ${KAFKA_CONSUMER_MAX_POLL_RECORDS:10}
        concurrency: ${KAFKA_CONSUMER_CONCURRENCY:2}

redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    database: 2
    jedis:
        pool:
            max-active: 8
            max-idle: 8
            min-idle: 0
            max-wait: -1ms
